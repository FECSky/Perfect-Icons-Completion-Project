name: CI
on:
  push:
    branches: [ main ]
    paths-ignore:
    - 'readme.md'
    - 'demo/**'
    - 'themes/**'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.message, '[skip ci]') == false 
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get Envs
        run: |
          echo version=$(echo ${{ github.event.head_commit.id }} | head -c 8) >> $GITHUB_ENV
          cd icons
          echo count=$(ls -l |grep "^d"|wc -l) >> $GITHUB_ENV
          cd ..
          echo date=$(TZ=':Asia/Shanghai' date '+%Y.%m.%d') >> $GITHUB_ENV
          echo time=$(TZ=':Asia/Shanghai' date '+%Y.%m.%d %H:%M') >> $GITHUB_ENV

      - name: Pack
        run: |
          echo "version=${{ env.version }}" >> ./addition/module/module.prop
          echo "ver=${{ env.version }}" >> ./addition/module/module.prop
          echo "count=${{ env.count }}" >> ./addition/module/module.prop
          chmod 755 ./.github/pack.sh
          ./.github/pack.sh

      - name: Organize Outputs
        run: |
          mkdir -p build
          mkdir -p buildpages
          cp -rf ./addition/mtz/Default.mtz ./build/Default_${{ env.version }}.mtz
          cp -rf ./addition/mtz/Explore.mtz ./build/Explore_${{ env.version }}.mtz
          cp -rf ./addition/mtz/Flyme9.mtz ./build/Flyme9_${{ env.version }}.mtz
          cp -rf ./addition/module/MIUI_Icons.zip ./build/MIUI_Icons_${{ env.version }}.zip
          cp -rf ./addition/Icons_Addon/Icons_Addon.zip ./build/Icons_Addon_${{ env.version }}.zip
          cp -rf ./addition/Icons_Archiving/Icons_Archiving.zip ./build/Icons_Archiving_${{ env.version }}.zip
          sed -i "s/{ver}/${{ env.version }}/g" ./addition/pages/ci.md
          sed -i "s/{date}/${{ env.time }}/g" ./addition/pages/ci.md
          sed -i "s/{count}/${{ env.count }}/g" ./addition/pages/ci.md

      - name: Upload Release Asset
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: beta
          prerelease: true
          title: ${{ env.date }}
          files: build/

      - name: Build Pages
        run: |
          echo "{\"count\": "${{ env.count }}"}" >> ./build/count.json
          sudo npm install -g markdown-styles
          generate-md --layout github --input ./addition/pages --output ./buildpages
          cp -rf ./buildpages/* ./build
          cp -rf ./addition/static.json ./build/static.json

      - name: Build to netlify
        uses: jsmrcaga/action-netlify-deploy@v1.1.0
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_ID }}
          build_directory: ./build
          NETLIFY_DEPLOY_TO_PROD: true

      - name: Build to vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          vercel-args: '--prod' #Optional
          vercel-org-id: ${{ secrets.ORG_ID}}  #Required
          vercel-project-id: ${{ secrets.PROJECT_ID}} #Required 
          working-directory: ./buildpages
          
      - name: Post to Channel
        if: contains(github.event.head_commit.message, '[skip post]') == false
        env:
          CHANNEL_ID: ${{ secrets.CHANNEL2_ID }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          MODULE: ./build/MIUI_Icons_${{ env.version }}.zip
          COMMIT_MESSAGE: |+
            MIUI完美图标补全计划
            新版本${{ env.version }}已发布
            累计适配图标${{ env.count }}个
            --------------
            ${{ github.event.head_commit.message }}
            by ${{ github.event.head_commit.author.name }}
            --------------
            下载导航站：https://miui.iconsx.tech/
        run: |
          ESCAPED=`python3 -c 'import json,os,urllib.parse; print(urllib.parse.quote(json.dumps(os.environ["COMMIT_MESSAGE"])))'`
          curl -v "https://api.telegram.org/bot${BOT_TOKEN}/sendMediaGroup?chat_id=${CHANNEL_ID}&media=%5B%7B%22type%22:%22document%22,%20%22media%22:%22attach://module%22,%22caption%22:${ESCAPED}%7D%5D"  -F module="@$MODULE"

      - name: Build to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "iconsx"
          heroku_email: "sdustpedro@gmail.com"
          appdir: "build"
          branch: "main"